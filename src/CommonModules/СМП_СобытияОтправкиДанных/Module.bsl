////////////////////////////////////////////////////////////////////////////////
// СМП_СобытияОтправкиДанных: отправка данных в приемник
//  
////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс

// Возвращает результат проверки подключения к базе-приемнику.
//
// Параметры:
//   ПараметрыПодключения - Структура:
//   						* АдресПодключения - Строка - адрес подключения к базе-приемнику.
//   						* ИдентификаторОбмена - Строка - набор символов однозначно идентифицирующий учетную запись обмена в базе-приемнике.
//   						* ИмяПользователя - Строка - имя пользователя информационной базы-премника.
//   						* ПарольПользователя - Строка - пароль пользователя информационной базы-приемника.
//
// Возвращаемое значение:
//   Неопределено - пока что функция выполняется в фоновом задании.
//
Функция ПолучитьРезультатПроверкиПодключенияПоХТТП(ПараметрыПодключения) Экспорт
	
	ТекстСообщения = "";
	
	УРЛ = ПараметрыПодключения.АдресПодключения 
		+ ?(СтрЗаканчиваетсяНа(ПараметрыПодключения.АдресПодключения, "/"), "", "/") 
		+ "hs/smp_exchange/ping/" 
		+ ПараметрыПодключения.ИдентификаторОбмена;
	СтрокаАвторизации = ПараметрыПодключения.ИмяПользователя + ":" + ПараметрыПодключения.ПарольПользователя;
	ДвДанные = ПолучитьДвоичныеДанныеИзСтроки(СтрокаАвторизации, КодировкаТекста.UTF8, Ложь);
	ЗакодированнаяСтрока = Base64Строка(ДвДанные);
	
	Сессия = СМП_КоннекторHTTP.СоздатьСессию();
	Сессия.Заголовки.Вставить("Authorization", "Basic " + ЗакодированнаяСтрока);
	
	ДанныеОтвета = СМП_КоннекторHTTP.Get(УРЛ,,, Сессия);
	ТекстОтвета = СМП_КоннекторHTTP.КакТекст(ДанныеОтвета);
	
	Если ДанныеОтвета.КодСостояния = 200 И ТекстОтвета = "" Тогда
		ТекстСообщения = "Подключение к базе-приемнику выполнено успешно! Учетная запись обмена данными доступна.";
	Иначе
		ТекстСообщения = "Возникла ошибка при подключении к базе-приемнику." + Символы.ПС
		+ "Код состояния - " + Строка(ДанныеОтвета.КодСостояния) + ". " + "Текст ошибки: " + ТекстОтвета;
	КонецЕсли;
	
	Сообщить(ТекстСообщения);
	Возврат Неопределено;
	
КонецФункции // ПолучитьРезультатПроверкиПодключенияПоХТТП

// Выполняет отправку сообщения по протоколу http.
//
// Параметры:
//   ПакетДанных - Строка - данные в формате JSON.
//   НастройкиТранспорта - Структура - см. СМП_ОнлайнОбменОбщегоНазначения.ПолучитьНастройкиТранспортаОбменаДанными().
//
// Возвращаемое значение:
//   Неопределено - пока что... потом переделать
//
Функция ОтправитьСообщениеЧерезХТТП(ПакетДанных, НастройкиТранспорта) Экспорт
	
	ИдентификаторПриемника = НастройкиТранспорта.ИдентификаторОбмена;
	АдресПриемника = НастройкиТранспорта.ИнтернетАдрес;
	пИмя = НастройкиТранспорта.ИмяПользователя;
	пПароль = НастройкиТранспорта.ПарольПользователя;
	
	УРЛ = АдресПриемника + ?(СтрЗаканчиваетсяНа(АдресПриемника, "/"), "", "/") + "hs/smp_exchange/data/" + ИдентификаторПриемника;
	Сессия = СМП_КоннекторHTTP.СоздатьСессию();
	Сессия.Заголовки.Вставить("content-type", "application/json");
	РезультатОтправки = СМП_КоннекторHTTP.Post(УРЛ, ПакетДанных, , Сессия);
	ТекстОтвета = СМП_КоннекторHTTP.КакТекст(РезультатОтправки);
	Возврат Неопределено;
	
КонецФункции // ОтправитьСообщениеЧерезХТТП

// Выполняет отправку сообщения путем сохранения его в файл.
//
//   ПакетДанных - Строка - данные в формате JSON.
//   НастройкиТранспорта - Структура - см. СМП_ОнлайнОбменОбщегоНазначения.ПолучитьНастройкиТранспортаОбменаДанными().
//
// Возвращаемое значение:
//   Неопределено - пока что... потом переделать
//
Функция ОтправитьСообщениеЧерезФайл(ПакетДанных, НастройкиТранспорта) Экспорт
	
	// ТекстовыйДокумент = Новый ТекстовыйДокумент;
	//ТекстовыйДокумент.УстановитьТекст(ИсходящиеДанные);
	//ИмяФайла = СтрШаблон("from_%1_to_%2_%3", ПрефиксФайловЭтойБазы, ПрефиксФайлов, ТекущаяУниверсальнаяДатаВМиллисекундах());
	//КаталогОбмена = ?(Прав(КаталогДляСохранения, 1) = "\", КаталогДляСохранения, КаталогДляСохранения + "\");
	//
	//ТекстовыйДокумент.Записать(КаталогОбмена + ИмяФайла + ".ledata");
	
	Возврат Неопределено;
	
КонецФункции // ОтправитьСообщениеЧерезФайл

// Выполняет отправку сообщения напрямую в базу через COM.
//
// Параметры:
//   ПакетДанных - Строка - данные в формате JSON.
//   НастройкиТранспорта - Структура - см. СМП_ОнлайнОбменОбщегоНазначения.ПолучитьНастройкиТранспортаОбменаДанными().
//
// Возвращаемое значение:
//   Неопределено - пока что... потом переделать
//
Функция ОтправитьСообщениеЧерезКОМ(ПакетДанных, НастройкиТранспорта) Экспорт
	
	
	
	Возврат Неопределено;
	
КонецФункции // ОтправитьСообщениеЧерезКОМ

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций
#КонецОбласти
