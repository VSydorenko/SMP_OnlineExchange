
#Область ОбработчикиСобытийФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Список

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	Для Каждого ДанныеСтроки Из Строки Цикл
		ДанныеСтроки.Значение.Данные.ДанныеПредставление = ЗначениеИзСтрокиВнутр(ДанныеСтроки.Значение.Данные.Данные);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбработатьСообщение(Команда)
	
	Если Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		ОбработатьСообщениеНаСервере(Элементы.Список.ТекущиеДанные.УчетнаЗаписьОбмена, Элементы.Список.ТекущиеДанные.УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Запускает процес формирования исходящих сообщений сообщения.
//
// Параметры:
//   Учетнаязаписьобмена - СправочникСсылка.СМП_УчетныеЗаписиОбменов - учетная запись в рамках которой обрабатывается сообщение.
//   ИдентификаторСообщения - Строка - уникальный идентификатор сообщения.
//
&НаСервереБезКонтекста
Процедура ОбработатьСообщениеНаСервере(УчетнаяЗаписьОбмена, ИдентификаторСообщения) 
	
	//МассивПараметров = Новый Массив(2);
	//МассивПараметров.Установить(0, УчетнаяЗаписьОбмена);
	//МассивПараметров.Установить(1, ИдентификаторСообщения);
	//ФЗ = ФоновыеЗадания.Выполнить("СМП_ОнлайнОбменУправлениеОчередями.ОтправитьСообщение", МассивПараметров, Новый УникальныйИдентификатор);
	
	// Отладка
	//СМП_ОнлайнОбменУправлениеОчередями.ОтправитьСообщение(УчетнаяЗаписьОбмена, ИдентификаторСообщения);
	
КонецПроцедуры //ОбработатьСообщениеНаСервере

#КонецОбласти