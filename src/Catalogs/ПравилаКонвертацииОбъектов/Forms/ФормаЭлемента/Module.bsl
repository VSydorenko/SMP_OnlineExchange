
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		Параметры.ЗначенияЗаполнения.Свойство("КонфигурацияИсточник", КонфигурацияИсточник);
	КонецЕсли;

	УстановитьВидимостьИДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Редактор кода
	#Если ВебКлиент Тогда
		
	#Иначе
		
		НачатьПолучениеКаталогаВременныхФайлов(Новый ОписаниеОповещения("ЗагрузитьРедакторКода", ЭтотОбъект));
		ОбновитьНаличиеОбработчиковАлгоритмов();
		
	#КонецЕсли
	
	ОбновитьТекущийАктивныйОбработчик();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	КонфигурацияИсточник = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "Источник");
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// Редактор кода
	//Объект.АлгоритмПередВыгрузкойОбъекта = Элементы.АлгоритмПередВыгрузкойОбъектаРедактор.Документ.defaultView.editor.getValue();
	//Объект.АлгоритмПриВыгрузкеОбъекта = Элементы.АлгоритмПриВыгрузкеОбъектаРедактор.Документ.defaultView.editor.getValue();
	//Объект.АлгоритмПослеВыгрузкиОбъекта = Элементы.АлгоритмПослеВыгрузкиОбъектаРедактор.Документ.defaultView.editor.getValue();
	//Объект.АлгоритмПослеВыгрузкиОбъектаВФайлОбмена = Элементы.АлгоритмПослеВыгрузкиОбъектаВФайлОбменаРедактор.Документ.defaultView.editor.getValue();
	Объект.АлгоритмПоследовательностьПолейПоиска = Элементы.АлгоритмПоследовательностьПолейПоискаРедактор.Документ.defaultView.editor.getValue();
	Объект.АлгоритмПередЗагрузкойОбъекта = Элементы.АлгоритмПередЗагрузкойОбъектаРедактор.Документ.defaultView.editor.getValue();
	Объект.АлгоритмПриЗагрузкеОбъекта = Элементы.АлгоритмПриЗагрузкеОбъектаРедактор.Документ.defaultView.editor.getValue();
	Объект.АлгоритмПослеЗагрузкиОбъекта = Элементы.АлгоритмПослеЗагрузкиОбъектаРедактор.Документ.defaultView.editor.getValue();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ЗаписьПравилаКонвертации");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПриемникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("ПриемникНачалоВыбораЗавершение", ЭтотОбъект);
	мПараметрыФормы = Новый Структура("ВидОбъектаОбмена", ПредопределенноеЗначение("Перечисление.СМП_ВидыОбъектовОбмена.ОбъектМетаданных"));
	ОткрытьФорму("ОбщаяФорма.СМП_ФормаВыбораПриемника", мПараметрыФормы, Элемент,,,, Оповещение);
	
КонецПроцедуры

// Обработчик оповещения выбора приемника.
//
&НаКлиенте
Процедура ПриемникНачалоВыбораЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия <> Неопределено Тогда
		Объект.Приемник = РезультатЗакрытия.Имя;
		Если НЕ Модифицированность Тогда
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры //ПриемникНачалоВыбораЗавершение

&НаКлиенте
Процедура СинхронизироватьПоИдентификаторуПриИзменении(Элемент)
	УстановитьВидимостьИДоступность();
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

&НаКлиенте
Процедура СтраницыАлгоритмыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ОбновитьТекущийАктивныйОбработчик();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьРедакторКода(Команда)
	
	ТекстОбработчика = Элементы[ТекущийАктивныйОбработчик + "Редактор"].Документ.defaultView.editor.getValue();
	мПараметры = Новый Структура("ТекстОбработчика", ТекстОбработчика);
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияРедактораКода", ЭтотОбъект);
	ОткрытьФорму("Обработка.СМП_РедакторКода.Форма", мПараметры, ЭтотОбъект,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Обработчик оповещения.
//
&НаКлиенте
Процедура ПослеЗакрытияРедактораКода(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Элементы[ТекущийАктивныйОбработчик + "Редактор"].Документ.defaultView.editor.setValue(РезультатЗакрытия);
	Если РезультатЗакрытия <> Объект[ТекущийАктивныйОбработчик] Тогда
		Объект[ТекущийАктивныйОбработчик] = РезультатЗакрытия;
		Модифицированность = Истина;
		ОбновитьНаличиеОбработчиковАлгоритмов();
	КонецЕсли;
	
КонецПроцедуры //ПослеЗакрытияРедактораКода

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Выполняет установку видимости и доступности элементов формы.
//
&НаСервере
Процедура УстановитьВидимостьИДоступность()
	
	Элементы.ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли.Доступность = Объект.СинхронизироватьПоИдентификатору;
	Элементы.ПриПереносеОбъектаПоСсылкеУстанавливатьТолькоGIUD.Доступность = Объект.СинхронизироватьПоИдентификатору;
	
КонецПроцедуры //УстановитьВидимость

// Редактор кода
&НаКлиенте
Процедура ЗагрузитьРедакторКода(ИмяКаталогаВременныхФайлов, ДополнительныеПараметры) Экспорт
	
	ДанныеПолей = Новый Соответствие;
	//ДанныеПолей.Вставить("АлгоритмПередВыгрузкойОбъектаРедактор", Объект.АлгоритмПередВыгрузкойОбъекта);
	//ДанныеПолей.Вставить("АлгоритмПриВыгрузкеОбъектаРедактор", Объект.АлгоритмПриВыгрузкеОбъекта);
	//ДанныеПолей.Вставить("АлгоритмПослеВыгрузкиОбъектаРедактор", Объект.АлгоритмПослеВыгрузкиОбъекта);
	//ДанныеПолей.Вставить("АлгоритмПослеВыгрузкиОбъектаВФайлОбменаРедактор");
	ДанныеПолей.Вставить("АлгоритмПоследовательностьПолейПоискаРедактор", Объект.АлгоритмПоследовательностьПолейПоиска);
	ДанныеПолей.Вставить("АлгоритмПередЗагрузкойОбъектаРедактор", Объект.АлгоритмПередЗагрузкойОбъекта);
	ДанныеПолей.Вставить("АлгоритмПриЗагрузкеОбъектаРедактор", Объект.АлгоритмПриЗагрузкеОбъекта);
	ДанныеПолей.Вставить("АлгоритмПослеЗагрузкиОбъектаРедактор", Объект.АлгоритмПослеЗагрузкиОбъекта);
	СМП_РедакторКодаКлиент.ЗагрузитьРедактор(ЭтотОбъект, ДанныеПолей, ИмяКаталогаВременныхФайлов);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНаличиеОбработчиковАлгоритмов()

	Картинка = БиблиотекаКартинок.СинтаксическийКонтроль;
	
	Если ЗначениеЗаполнено(Объект.АлгоритмПоследовательностьПолейПоиска)
			Или ЗначениеЗаполнено(Объект.АлгоритмПередЗагрузкойОбъекта)
			Или ЗначениеЗаполнено(Объект.АлгоритмПриЗагрузкеОбъекта)
			Или ЗначениеЗаполнено(Объект.АлгоритмПослеЗагрузкиОбъекта)
		Тогда
		Элементы.СтраницаОбработчикиСобытий.Картинка = Картинка;
	Иначе
		Элементы.СтраницаОбработчикиСобытий.Картинка = Новый Картинка;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.АлгоритмПоследовательностьПолейПоиска) Тогда
		Элементы.СтраницаАлгоритмПоследовательностьПолейПоиска.Картинка = Картинка;
	Иначе
		Элементы.СтраницаАлгоритмПоследовательностьПолейПоиска.Картинка = Новый Картинка;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.АлгоритмПередЗагрузкойОбъекта) Тогда
		Элементы.СтраницаАлгоритмПередЗагрузкойОбъекта.Картинка = Картинка;
	Иначе
		Элементы.СтраницаАлгоритмПередЗагрузкойОбъекта.Картинка = Новый Картинка;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.АлгоритмПриЗагрузкеОбъекта) Тогда
		Элементы.СтраницаАлгоритмПриЗагрузкеОбъекта.Картинка = Картинка;
	Иначе
		Элементы.СтраницаАлгоритмПриЗагрузкеОбъекта.Картинка = Новый Картинка;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.АлгоритмПослеЗагрузкиОбъекта) Тогда
		Элементы.СтраницаАлгоритмПослеЗагрузкиОбъекта.Картинка = Картинка;
	Иначе
		Элементы.СтраницаАлгоритмПослеЗагрузкиОбъекта.Картинка = Новый Картинка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТекущийАктивныйОбработчик() 
	
	ИмяТекВкладки = Элементы.СтраницыАлгоритмы.ТекущаяСтраница.Имя;
	ТекущийАктивныйОбработчик = СтрЗаменить(ИмяТекВкладки, "Страница", "");
	
КонецПроцедуры //ОбновитьТекущийАктивныйОбработчик

#КонецОбласти
