
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтруктураПолей = Новый Структура("ОбъектИсточник, ОбъектПриемник, УчетнаяЗаписьОбменаДанными", "Источник", "Приемник", "Владелец");
	РеквизитыВладельца = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Владелец, СтруктураПолей);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыВладельца);
	
	Если Не Объект.Родитель.Пустая() Тогда
		РеквизитыРодителя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Родитель, "Источник, Приемник");
		ОбъектПриемникТабЧасть = РеквизитыРодителя.Приемник;
		ОтборРодитель = Новый ПараметрВыбора("Отбор.Родитель", РеквизитыРодителя.Источник);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(ОтборРодитель);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.Источник.ПараметрыВыбора = НовыеПараметры;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Редактор кода
	НачатьПолучениеКаталогаВременныхФайлов(Новый ОписаниеОповещения("ЗагрузитьРедакторКода", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// Редактор кода
	Объект.АлгоритмПередВыгрузкойСвойства = Элементы.АлгоритмПередВыгрузкойСвойстваРедактор.Документ.defaultView.editor.getValue();
	Объект.АлгоритмПриВыгрузкеСвойства = Элементы.АлгоритмПриВыгрузкеСвойстваРедактор.Документ.defaultView.editor.getValue();
	Объект.АлгоритмПослеВыгрузкиСвойства = Элементы.АлгоритмПослеВыгрузкиСвойстваРедактор.Документ.defaultView.editor.getValue();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФорм

&НаКлиенте
Процедура ПриемникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ОбъектПриемник) Тогда
		Оповещение = Новый ОписаниеОповещения("ПриемникНачалоВыбораЗавершение", ЭтотОбъект);
		мПараметрыФормы = Новый Структура("ВидОбъектаОбмена, ИмяРодительскогоОбъекта, ИмяТабличнойчастиОбъекта",
		ПредопределенноеЗначение("Перечисление.СМП_ВидыОбъектовОбмена.СвойствоОбъекта"), ОбъектПриемник, ОбъектПриемникТабЧасть);
		ОткрытьФорму("ОбщаяФорма.СМП_ФормаВыбораПриемника", мПараметрыФормы, Элемент,,,, Оповещение);
	КонецЕсли;
	
КонецПроцедуры

// Обработчик оповещения.
//
&НаКлиенте
Процедура ПриемникНачалоВыбораЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия <> Неопределено Тогда
		Объект.Приемник = РезультатЗакрытия;
		Если НЕ Модифицированность Тогда
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры //ПриемникНачалоВыбораЗавершение

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Редактор кода
&НаКлиенте
Процедура ЗагрузитьРедакторКода(ИмяКаталогаВременныхФайлов, ДополнительныеПараметры) Экспорт
	
	СМП_РедакторКодаКлиент.ЗагрузитьРедактор(ЭтаФорма, "АлгоритмПередВыгрузкойСвойстваРедактор", Объект.АлгоритмПередВыгрузкойСвойства, ИмяКаталогаВременныхФайлов);
	СМП_РедакторКодаКлиент.ЗагрузитьРедактор(ЭтаФорма, "АлгоритмПриВыгрузкеСвойстваРедактор", Объект.АлгоритмПриВыгрузкеСвойства, ИмяКаталогаВременныхФайлов);
	СМП_РедакторКодаКлиент.ЗагрузитьРедактор(ЭтаФорма, "АлгоритмПослеВыгрузкиСвойстваРедактор", Объект.АлгоритмПослеВыгрузкиСвойства, ИмяКаталогаВременныхФайлов);
	
КонецПроцедуры

#КонецОбласти
