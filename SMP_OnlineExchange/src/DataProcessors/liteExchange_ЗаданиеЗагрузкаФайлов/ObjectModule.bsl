
Перем ИмяСобытияЖР;

Функция СведенияОВнешнейОбработке() Экспорт
	
	РегистрационныеДанные = Новый Структура;
	РегистрационныеДанные.Вставить("Наименование", "liteExchange задание загрузка файлов");
	РегистрационныеДанные.Вставить("БезопасныйРежим", Ложь);
	РегистрационныеДанные.Вставить("Версия", "1.0");                      
	РегистрационныеДанные.Вставить("Вид", "ДополнительнаяОбработка");	
	РегистрационныеДанные.Вставить("Информация", "Шаблон внешнего регламентного задания");
	
	тзКоманд = Новый ТаблицаЗначений;
	тзКоманд.Колонки.Добавить("Идентификатор");
	тзКоманд.Колонки.Добавить("Представление");
	тзКоманд.Колонки.Добавить("Модификатор");
	тзКоманд.Колонки.Добавить("ПоказыватьОповещение");
	тзКоманд.Колонки.Добавить("Использование");
	
	строкаКоманды = тзКоманд.Добавить();
	строкаКоманды.Идентификатор = "НастройкаПараметровРегламентногоЗадания";
	строкаКоманды.Представление = "Настройка параметров выполнения регл. задания";
	строкаКоманды.Использование = "ОткрытиеФормы";
		
	строкаКоманды = тзКоманд.Добавить();
	строкаКоманды.Идентификатор = "ВыполнениеРегламентногоЗадания";
	строкаКоманды.Представление = "Выполнение регл. задания";
	строкаКоманды.Использование = "ВызовСерверногоМетода";
		
	РегистрационныеДанные.Вставить("Команды", тзКоманд);
		
	Возврат РегистрационныеДанные;
	
КонецФункции

///////////////////// ПОЛУЧЕНИЕ НАСТРОЕК ВЫПОЛНЕНИЯ РЕГЛ. ЗАДАНИЯ /////////////////////////

Функция ПолучитьПараметрыВыполненияРегламентногоЗадания(ИнтерактивноеПолучение = Ложь) Экспорт

	ОписаниеОшибки = "";	
	ОбработкаРеглЗадания = ПолучитьОбработкуРегламентногоЗадания(ИнтерактивноеПолучение, ОписаниеОшибки);
		
	Если НЕ ОбработкаРеглЗадания.Пустая() Тогда
		
		НастройкиРеглЗадания = ОбработкаРеглЗадания.ХранилищеНастроек.Получить();		
		
		Если НастройкиРеглЗадания <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, НастройкиРеглЗадания);
		ИначеЕсли НЕ ИнтерактивноеПолучение Тогда	
			ОписаниеОшибки = "Настройки выполнения не заданы";
			ЗаписьЖурналаРегистрации(ИмяСобытияЖР, УровеньЖурналаРегистрации.Ошибка, Метаданные.Справочники.ДополнительныеОтчетыИОбработки, ОбработкаРеглЗадания, ОписаниеОшибки); 
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ОписаниеОшибки;
	
КонецФункции

Функция ПолучитьОбработкуРегламентногоЗадания(ИнтерактивноеПолучение = Ложь, ОписаниеОшибки = "") Экспорт
	
	ОбработкаРеглЗадания = Справочники.ДополнительныеОтчетыИОбработки.НайтиПоРеквизиту("ИмяОбъекта", Метаданные().Имя);		
	
	Если ОбработкаРеглЗадания.Пустая() Тогда
		ОписаниеОшибки = "В справочнике ""Дополнительные отчеты и обработки"" не обнаружена обработка с именем """ + Метаданные().Имя + """";
		Если НЕ ИнтерактивноеПолучение Тогда
			ЗаписьЖурналаРегистрации(ИмяСобытияЖР, УровеньЖурналаРегистрации.Ошибка, Метаданные.Справочники.ДополнительныеОтчетыИОбработки,,ОписаниеОшибки); 
		КонецЕсли;
	КонецЕсли;

	Возврат ОбработкаРеглЗадания;
	
КонецФункции

///////////////////// ПРОЦЕДУРЫ ВЫПОЛНЕНИЯ РЕГЛ. ЗАДАНИЯ //////////////////////////////////

Процедура ВыполнитьКоманду(ИдентификаторКоманды) Экспорт
	
	//ОписаниеОшибки = ПолучитьПараметрыВыполненияРегламентногоЗадания();
	//
	//Если НЕ ПустаяСтрока(ОписаниеОшибки) Тогда
	//	Возврат;
	//КонецЕсли;
	
	Настройки = ПолучитьНастройки();
	
	Пока Настройки.Следующий() Цикл
		Если ЗначениеЗаполнено(Настройки.КаталогОбмена) Тогда
			ПрефиксФайлов = Настройки.ПрефиксФайлов;
			ШаблонИмениФайла = СтрШаблон("from_%1_to_%2_", Настройки.ПрефиксФайлов, Настройки.ПрефиксФайловЭтойБазы);
			
			Файлы = НайтиФайлы(Настройки.КаталогОбмена, ШаблонИмениФайла + "*.ledata");
			
			Сч = 0;
			Для Каждого Файл Из Файлы Цикл
				
				Если Сч > 1000 Тогда
					Прервать; // освободим сервер для выполнения других задач
				КонецЕсли;
				
				ТекстовыйДокумент = Новый ТекстовыйДокумент;
				ТекстовыйДокумент.Прочитать(Файл.ПолноеИмя);
				Текст = ТекстовыйДокумент.ПолучитьТекст();
				
				ТаймШтамп = Файл.ИмяБезРасширения;
				ТаймШтамп = СтрЗаменить(ТаймШтамп, ШаблонИмениФайла, "");
				ТаймШтамп = Число(СтрЗаменить(ТаймШтамп, " ", ""));

				СМП_ОнлайнОбменУправлениеОчередями.ПоместитьСообщениеВОчередьВходящих(Текст, ТаймШтамп);
				
				ТекстовыйДокумент = Неопределено;
				
				УдалитьФайлы(Файл.ПолноеИмя);
				
				Сч = Сч + 1;
			КонецЦикла;
		КонецЕсли	
	КонецЦикла;
КонецПроцедуры	

Функция ПолучитьНастройки() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ *
		|ИЗ
		|	РегистрСведений.леНастройкиТранспортаОбменаДанными КАК леНастройкиТранспортаОбменаДанными";	
	РезультатЗапроса = Запрос.Выполнить();	
	Выборка = РезультатЗапроса.Выбрать();

	Возврат Выборка;
КонецФункции

ИмяСобытияЖР = "Exchange API";