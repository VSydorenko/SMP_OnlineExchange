////////////////////////////////////////////////////////////////////////////////
// <Заголовок модуля: краткое описание и условия применения модуля.>
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возврашает таблицу с условиями регистрации документов к выгрузке.
//
// Возвращаемое значение:
//   ТаблицаЗначений - см. СМП_ОнлайнОбменПовтИсп.ИнициализироватьТаблицуПРД() 
//
Функция ПолучитьТаблицуПравилРегистрацииДокументов() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаПРД = ИнициализироватьТаблицуПРД();
	МассивОнлайнОбменов = ПолучитьУчетныеЗаписиОнлайнОбменов();
	Если МассивОнлайнОбменов.Количество() = 0 Тогда
		Возврат ТаблицаПРД;
	КонецЕсли;
	
	Для Каждого ОбменСсылка Из МассивОнлайнОбменов Цикл
		
		ОбменОбъект = ОбменСсылка.ПолучитьОбъект();
		Если ОбменОбъект.ОбъектыКВыгрузке.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		ТаблицаДокументов = ОбменОбъект.ОбъектыКВыгрузке;
		
		Для Каждого СтрокаТЧ Из ТаблицаДокументов Цикл
			
			СтрокаПравило = ТаблицаПРД.Добавить();
			СтрокаПравило.УчетнаяЗапись = ОбменСсылка;
			СтрокаПравило.ДатаНачалаВыгрузкиДокументов = ОбменОбъект.ДатаНачалаВыгрузкиДокументов;
			СтрокаПравило.ИмяДокумента = СтрокаТЧ.ПолноеИмяОбъекта;
			СтрокаПравило.СхемаКД = СтрокаТЧ.СкдДляОтборов.Получить();
			
		КонецЦикла;
		
	КонецЦикла;

	Возврат ТаблицаПРД;
	
КонецФункции // ПолучитьТаблицуПравилРегистрацииДокументов

// Возвращает учетную запись обмена по переданному идентификатору.
//
// Параметры:
//   ИдентификаторОбмена - Строка - набор символов однозначно идентифицирующий учетную запись обмена в базе-приемнике.
//   ЭтоПриемник - Булево - признак учетной записи обмена на стороне применика.
//
// Возвращаемое значение:
//   СправочникСсылка.СМП_УчетныеЗаписиОбменов, Неопределено
//
Функция ПолучитьУчетнуюЗаписьОбменаПоИд(ИдентификаторОбмена, ЭтоПриемник = Ложь) Экспорт
	
	УчетнаяЗапись = СМП_ОнлайнОбмен.ПолучитьУчетнуюЗаписьОбменаПоИд(ИдентификаторОбмена, ЭтоПриемник);
	Возврат УчетнаяЗапись;
	
КонецФункции // ПолучитьУчетнуюЗаписьОбменаПоИд

// Возвращает настройки транспорта обмена данными.
//
// Параметры:
//   УчетнаяЗапись - СправочникСсылка.СМП_УчетныеЗаписиОбменов - обмен для которого нужно получить настройки.
//
// Возвращаемое значение:
//   Структура - см. СМП_ОнлайнОбменОбщегоНазначения.ПолучитьНастройкиТранспортаОбменаДанными().
//
Функция ПолучитьНастройкиТранспортаОбменаДанными(УчетнаяЗапись) Экспорт
	
	НастройкиТранспорта = СМП_ОнлайнОбмен.ПолучитьНастройкиТранспортаОбменаДанными(УчетнаяЗапись);
	Возврат НастройкиТранспорта;
	
КонецФункции // ПолучитьНастройкиТранспортаОбменаДанными

// Возвращает идентификатор текущего пользователя информационной базы.
//
// Параметры:
//   Нет.
//
// Возвращаемое значение:
//   Строка - строковое представление уникального идентификатора
//
Функция ПолучитьИдентификаторТекущегоПользователяИБ() Экспорт
	
	УИД = ПользователиИнформационнойБазы.ТекущийПользователь().УникальныйИдентификатор;
	
	Возврат Строка(УИД);
	
КонецФункции // ПолучитьИдентификаторПользователяИБ

// .
//
// Параметры:
//   УчетнаяЗаписьОбмена - СправочникСсылка.СМП_УчетныеЗаписиОбменов - учетная запись обмена для которой проверяется признак отладки.
//   Если отладка включена, сообщения остаются в очередях. 
//
// Возвращаемое значение:
//   Булево - признак отладки для учетной записи обмена
//
Функция ВключенаОтладкаДляОбмена(УчетнаяЗаписьОбмена) Экспорт
	
	Отладка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УчетнаяЗаписьОбмена, "РежимОтладки");
	
	Возврат Отладка;
	
КонецФункции // ВключенаОтладкаДляОбмена

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область КонвертацияДанных

// Возвращает объект обработки для конвертации.
//
// Возвращаемое значение:
//   ОбработкаОбъект.СМП_онлайнОбменКонвертацияОбъектов - новый экземпляр обработки;
//
Функция ПолучитьОбработкуКонвертацииОбъектов() Экспорт
	
	ОбработкаОбъект = Обработки.СМП_ОнлайнОбменКонвертацияОбъектов.Создать();
	Возврат ОбработкаОбъект;
	
КонецФункции // ПолучитьОбработкуКонвертацииОбъектов


#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает массив учетных записей действующих онлайн обменов.
//
// Возвращаемое значение:
//   Массив из СправочникСсылка.СМП_УчетныеЗаписиОбменов
//
Функция ПолучитьУчетныеЗаписиОнлайнОбменов() 
	
	МассивОнлайнОбменов = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СМП_УчетныеЗаписиОбменов.Ссылка КАК ОбменСсылка
	|ИЗ
	|	Справочник.СМП_УчетныеЗаписиОбменов КАК СМП_УчетныеЗаписиОбменов
	|ГДЕ
	|	СМП_УчетныеЗаписиОбменов.ПометкаУдаления = ЛОЖЬ";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		МассивОнлайнОбменов = Результат.Выгрузить().ВыгрузитьКолонку("ОбменСсылка");
	КонецЕсли;
	
	Возврат МассивОнлайнОбменов;
	
КонецФункции // ПолучитьУчетныеЗаписиОнлайнОбменов

// Возвращает пустую таблицу для правил регистрации документов.
//
// Возвращаемое значение:
//   ТаблицаЗначений
//
Функция ИнициализироватьТаблицуПРД() 
	
	ТаблицаПРД = Новый ТаблицаЗначений;
	ТаблицаПРД.Колонки.Добавить("УчетнаяЗапись", Новый ОписаниеТипов("СправочникСсылка.СМП_УчетныеЗаписиОбменов"));
	ТаблицаПРД.Колонки.Добавить("ДатаНачалаВыгрузкиДокументов", Новый ОписаниеТипов("Дата",,,,, Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ТаблицаПРД.Колонки.Добавить("ИмяДокумента", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(0, ДопустимаяДлина.Переменная)));
	ТаблицаПРД.Колонки.Добавить("СхемаКД", Новый ОписаниеТипов("СхемаКомпоновкиДанных"));
	
	Возврат ТаблицаПРД;
	
КонецФункции // ИнициализироватьТаблицуПРД

#КонецОбласти