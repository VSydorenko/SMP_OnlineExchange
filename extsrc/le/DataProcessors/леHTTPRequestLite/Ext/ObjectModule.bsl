// входящие данные
Перем Адрес         Экспорт;
Перем Данные        Экспорт;
Перем Файлы         Экспорт;
Перем Объект1с      Экспорт;
Перем Таймаут       Экспорт;
Перем ФорматОтвета  Экспорт;
Перем Cookies       Экспорт;
Перем Сессия        Экспорт;
Перем Заголовки     Экспорт;
Перем ВозвращатьОтветСтрокой Экспорт;

Перем Логин;
Перем Пароль;

Перем АдресСервера;
Перем АдресРесурса;
Перем Порт;
Перем ЗащищенноеСоединение;
	
// Исходящие данные
Перем КодОтвета         Экспорт;
Перем СообщениеОбОшибке Экспорт;
Перем ОтветСервера      Экспорт;
Перем HttpОтвет         Экспорт;

#Область ПрограммныйИнтерфейс

Функция Post(вхАдрес, вхДанныеВJSON = Неопределено, вхЛогин = Неопределено, вхПароль = Неопределено) Экспорт
	Попытка
		ЗаполнитьПараметры(вхАдрес, вхДанныеВJSON, вхЛогин, вхПароль);
		ВыполнитьЗапросПост();
		ОбработатьОтветаСервера();
	Исключение
		СообщениеОбОшибке = ОписаниеОшибки();
		Сообщить(СообщениеОбОшибке);
	КонецПопытки;
	Возврат ОтветСервера;
КонецФункции

Функция Get(вхАдрес, вхЛогин = Неопределено, вхПароль = Неопределено) Экспорт
	Попытка
		ЗаполнитьПараметры(вхАдрес, Неопределено, вхЛогин, вхПароль);
		ВыполнитьЗапросГет();
		ОбработатьОтветаСервера();
	Исключение
		СообщениеОбОшибке = ОписаниеОшибки();
		Сообщить(СообщениеОбОшибке);
	КонецПопытки;
	Возврат ОтветСервера;
КонецФункции

#КонецОбласти

#Область ВыполнениеЗапросов
Функция ВыполнитьЗапросГет()
	Соединение = ПолучитьСоединение();
    
    Запрос = Новый HTTPЗапрос(АдресРесурса);
    HttpОтвет = Соединение.Получить(Запрос);
КонецФункции

Функция ВыполнитьЗапросПост()
	Соединение = ПолучитьСоединение();
    
    Запрос = Новый HTTPЗапрос(АдресРесурса);
	Запрос.УстановитьТелоИзСтроки(Данные);
    HttpОтвет = Соединение.ОтправитьДляОбработки(Запрос);
КонецФункции
#КонецОбласти

#Область ОбработкаОтветов

#КонецОбласти

#Область Служебные
Функция ПолучитьСоединение()
    Соединение = Новый HTTPСоединение(
        АдресСервера, // сервер (хост)
        Порт, // порт, по умолчанию для http используется 80, для https 443
        Логин, // пользователь для доступа к серверу (если он есть)
        Пароль, // пароль для доступа к серверу (если он есть)
        , // здесь указывается прокси, если он есть
        Таймаут, // таймаут в секундах, 0 или пусто - не устанавливать
        ЗащищенноеСоединение  // защищенное соединение, если используется https
    );
	
	Возврат Соединение;
КонецФункции

Функция ПолучитьАдресРесурса()
	АдресРесурса = НРег(Адрес);
	Если Найти(НРег(АдресРесурса), "https") Тогда
		ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL();
		Порт = 443;
		АдресРесурса = СтрЗаменить(АдресРесурса, "https://", "");
	Иначе
		ЗащищенноеСоединение = Неопределено;
		Порт = 80;
		АдресРесурса = СтрЗаменить(АдресРесурса, "http://", "");
	КонецЕсли;
	
	Составляющие = СтрРазделить(АдресРесурса, "/");
	Если Составляющие.Количество() = 0 Тогда
		ВызватьИсключение "Ошибка разбора адреса";
	КонецЕсли;
	
	АдресСервера = Составляющие[0];
	Составляющие.Удалить(0);
	Если Найти(АдресСервера, ":") Тогда
		АдресСервера = СтрРазделить(АдресСервера, ":");
		Порт   = АдресСервера[1];
		АдресСервера = АдресСервера[0];
	КонецЕсли;
	
	АдресРесурса = "/" + СтрСоединить(Составляющие, "/");
КонецФункции

Функция ЗаполнитьПараметры(вхАдрес, вхДанныеВJSON, вхЛогин, вхПароль)
	Адрес = вхАдрес;
	Если ЗначениеЗаполнено(вхДанныеВJSON) Тогда
	  	Данные = вхДанныеВJSON;
	Иначе
		Данные = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(вхЛогин) Тогда
		Логин = вхЛогин;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(вхПароль) Тогда
		Пароль = вхПароль;
	КонецЕсли;
	
	ПолучитьАдресРесурса();
КонецФункции

Функция ОбработатьОтветаСервера()
	Если ВозвращатьОтветСтрокой Тогда
		ОтветСервера = HttpОтвет.ПолучитьТелоКакСтроку();
	КонецЕсли;
КонецФункции

Функция Инициализация()
	Логн    = "";
	Пароль  = "";
	Таймаут = 60;
	ВозвращатьОтветСтрокой = Истина;
КонецФункции
#КонецОбласти

Инициализация();